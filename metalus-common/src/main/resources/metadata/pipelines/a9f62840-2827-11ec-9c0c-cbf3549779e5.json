{
  "id": "a9f62840-2827-11ec-9c0c-cbf3549779e5",
  "name": "LoadToBronze",
  "category": "pipeline",
  "layout": {
    "Load": {
      "x": 493,
      "y": 64
    },
    "ExecuteColumnCleanup": {
      "x": 493,
      "y": 178
    },
    "StandardizeColumnNames": {
      "x": 526.5,
      "y": 292
    },
    "AddRecordIdDecision": {
      "x": 493,
      "y": 406
    },
    "AddRecordId": {
      "x": 526.5,
      "y": 520
    },
    "AddFileIdDecision": {
      "x": 493,
      "y": 634
    },
    "AddFileId": {
      "x": 526.5,
      "y": 748
    },
    "Write": {
      "x": 493,
      "y": 862
    }
  },
  "steps": [
    {
      "id": "Load",
      "category": "Connectors",
      "creationDate": "2021-10-06T09:34:22.488Z",
      "description": "This step will create a DataFrame using the given DataConnector",
      "displayName": "Load",
      "engineMeta": {
        "spark": "DataConnectorSteps.loadDataFrame",
        "pkg": "com.acxiom.pipeline.steps",
        "results": {
          "primaryType": "org.apache.spark.sql.DataFrame"
        }
      },
      "modifiedDate": "2021-10-07T11:41:28.885Z",
      "params": [
        {
          "type": "text",
          "name": "connector",
          "required": true,
          "parameterType": "com.acxiom.pipeline.connectors.DataConnector",
          "description": "The data connector to use when writing",
          "value": "!sourceBronzeConnector"
        },
        {
          "type": "text",
          "name": "source",
          "required": false,
          "parameterType": "String",
          "description": "The source path to load data",
          "value": "!sourceBronzePath"
        },
        {
          "type": "object",
          "name": "readOptions",
          "required": false,
          "className": "com.acxiom.pipeline.steps.DataFrameReaderOptions",
          "parameterType": "com.acxiom.pipeline.steps.DataFrameReaderOptions",
          "description": "The optional options to use while reading the data",
          "value": "!sourceBronzeReadOptions"
        }
      ],
      "tags": [
        "metalus-common_2.11-spark_2.4-1.8.3-SNAPSHOT.jar"
      ],
      "type": "Pipeline",
      "stepId": "836aab38-1140-4606-ab73-5b6744f0e7e7",
      "nextStepId": "ExecuteColumnCleanup"
    },
    {
      "id": "ExecuteColumnCleanup",
      "displayName": "String Equals",
      "description": "Return whether string1 equals string2",
      "type": "branch",
      "params": [
        {
          "type": "text",
          "name": "string",
          "required": true,
          "value": "!executeColumnCleanup || true",
          "description": "The string to compare"
        },
        {
          "type": "text",
          "name": "anotherString",
          "required": true,
          "value": "true",
          "description": "The other string to compare"
        },
        {
          "type": "boolean",
          "name": "caseInsensitive",
          "required": false,
          "value": true,
          "description": "Boolean flag to indicate case sensitive compare"
        },
        {
          "type": "result",
          "name": "true",
          "required": false,
          "value": "StandardizeColumnNames",
          "description": ""
        },
        {
          "type": "result",
          "name": "false",
          "required": false,
          "value": "AddRecordIdDecision",
          "description": ""
        }
      ],
      "engineMeta": {
        "spark": "StringSteps.stringEquals",
        "pkg": "com.acxiom.pipeline.steps",
        "results": {
          "primaryType": "Boolean"
        }
      },
      "stepId": "3fabf9ec-5383-4eb3-81af-6092ab7c370d"
    },
    {
      "id": "StandardizeColumnNames",
      "displayName": "Standardize Column Names on a DataFrame",
      "description": "This step will standardize columns names on existing dataframe",
      "type": "Pipeline",
      "params": [
        {
          "type": "text",
          "name": "dataFrame",
          "required": false,
          "value": "@Load",
          "description": ""
        }
      ],
      "engineMeta": {
        "spark": "TransformationSteps.standardizeColumnNames",
        "pkg": "com.acxiom.pipeline.steps"
      },
      "nextStepId": "AddRecordIdDecision",
      "stepId": "a981080d-714c-4d36-8b09-d95842ec5655"
    },
    {
      "id": "AddRecordIdDecision",
      "displayName": "String Equals",
      "description": "Return whether string1 equals string2",
      "type": "branch",
      "params": [
        {
          "type": "text",
          "name": "string",
          "required": true,
          "value": "!addRecordId || true",
          "description": "The string to compare"
        },
        {
          "type": "text",
          "name": "anotherString",
          "required": true,
          "value": "true",
          "description": "The other string to compare"
        },
        {
          "type": "boolean",
          "name": "caseInsensitive",
          "required": false,
          "value": true,
          "description": "Boolean flag to indicate case sensitive compare"
        },
        {
          "type": "result",
          "name": "true",
          "required": false,
          "value": "AddRecordId",
          "description": ""
        },
        {
          "type": "result",
          "name": "false",
          "required": false,
          "value": "AddFileIdDecision",
          "description": ""
        }
      ],
      "engineMeta": {
        "spark": "StringSteps.stringEquals",
        "pkg": "com.acxiom.pipeline.steps",
        "results": {
          "primaryType": "Boolean"
        }
      },
      "stepId": "3fabf9ec-5383-4eb3-81af-6092ab7c370d"
    },
    {
      "id": "AddRecordId",
      "displayName": "Adds a Unique Identifier to a DataFrame",
      "description": "This step will add a new unique identifier to an existing data frame",
      "type": "Pipeline",
      "params": [
        {
          "type": "text",
          "name": "idColumnName",
          "required": false,
          "value": "metalus_record_id",
          "description": ""
        },
        {
          "type": "text",
          "name": "dataFrame",
          "required": false,
          "value": "@StandardizeColumnNames || @LoadDataFrame",
          "description": ""
        }
      ],
      "engineMeta": {
        "spark": "DataSteps.addUniqueIdToDataFrame",
        "pkg": "com.acxiom.pipeline.steps"
      },
      "nextStepId": "AddFileIdDecision",
      "stepId": "9f7d84b0-ebab-57da-8b39-be4c47028242"
    },
    {
      "id": "AddFileIdDecision",
      "displayName": "String Equals",
      "description": "Return whether string1 equals string2",
      "type": "branch",
      "params": [
        {
          "type": "text",
          "name": "string",
          "required": true,
          "value": "!addFileId || true",
          "description": "The string to compare"
        },
        {
          "type": "text",
          "name": "anotherString",
          "required": true,
          "value": "true",
          "description": "The other string to compare"
        },
        {
          "type": "boolean",
          "name": "caseInsensitive",
          "required": false,
          "value": true,
          "description": "Boolean flag to indicate case sensitive compare"
        },
        {
          "type": "result",
          "name": "true",
          "required": false,
          "value": "AddFileId",
          "description": ""
        },
        {
          "type": "result",
          "name": "false",
          "required": false,
          "value": "Write",
          "description": ""
        }
      ],
      "engineMeta": {
        "spark": "StringSteps.stringEquals",
        "pkg": "com.acxiom.pipeline.steps",
        "results": {
          "primaryType": "Boolean"
        }
      },
      "stepId": "3fabf9ec-5383-4eb3-81af-6092ab7c370d"
    },
    {
      "id": "AddFileId",
      "displayName": "Add a Column with a Static Value to All Rows in a DataFrame",
      "description": "This step will add a column with a static value to all rows in the provided data frame",
      "type": "Pipeline",
      "params": [
        {
          "type": "text",
          "name": "dataFrame",
          "required": false,
          "value": "@AddRecordId || @StandardizeColumnNames || @LoadDataFrame",
          "description": ""
        },
        {
          "type": "text",
          "name": "columnName",
          "required": false,
          "value": "metalus_file_id",
          "description": ""
        },
        {
          "type": "text",
          "name": "columnValue",
          "required": false,
          "value": "!fileId",
          "description": ""
        }
      ],
      "engineMeta": {
        "spark": "DataSteps.addStaticColumnToDataFrame",
        "pkg": "com.acxiom.pipeline.steps"
      },
      "nextStepId": "Write",
      "stepId": "37e10488-02c1-5c85-b47a-efecf681fdd4"
    },
    {
      "id": "Write",
      "category": "Connectors",
      "creationDate": "2021-10-06T09:34:22.558Z",
      "description": "This step will write a DataFrame using the given DataConnector",
      "displayName": "Write",
      "engineMeta": {
        "spark": "DataConnectorSteps.writeDataFrame",
        "pkg": "com.acxiom.pipeline.steps",
        "results": {
          "primaryType": "org.apache.spark.sql.streaming.StreamingQuery"
        }
      },
      "modifiedDate": "2021-10-07T11:41:28.969Z",
      "params": [
        {
          "type": "text",
          "name": "dataFrame",
          "required": true,
          "parameterType": "org.apache.spark.sql.DataFrame",
          "description": "The DataFrame to write",
          "value": "@AddFileId || @AddRecordId || @StandardizeColumnNames || @Load"
        },
        {
          "type": "text",
          "name": "connector",
          "required": true,
          "parameterType": "com.acxiom.pipeline.connectors.DataConnector",
          "description": "The data connector to use when writing",
          "value": "!destinationBronzeConnector"
        },
        {
          "type": "text",
          "name": "destination",
          "required": false,
          "parameterType": "String",
          "description": "The destination path to write data",
          "value": "!destinationBronzePath"
        },
        {
          "type": "object",
          "name": "writeOptions",
          "required": false,
          "className": "com.acxiom.pipeline.steps.DataFrameWriterOptions",
          "parameterType": "com.acxiom.pipeline.steps.DataFrameWriterOptions",
          "description": "The optional DataFrame options to use while writing",
          "value": "!destinationBronzeWriteOptions"
        }
      ],
      "tags": [
        "metalus-common_2.11-spark_2.4-1.8.3-SNAPSHOT.jar"
      ],
      "type": "Pipeline",
      "stepId": "5608eba7-e9ff-48e6-af77-b5e810b99d89"
    }
  ]
}
