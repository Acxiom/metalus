{
  "id": "dcff1d10-c2c3-11eb-928b-3dca5c59af1b",
  "name": "LoadToParquet",
  "category": "pipeline",
  "layout": {
    "LoadDataFrame": {
      "x": 468.5,
      "y": 64
    },
    "ExecuteColumnCleanup": {
      "x": 468.5,
      "y": 178
    },
    "StandardizeColumnNames": {
      "x": 502,
      "y": 292
    },
    "AddRecordIdDecision": {
      "x": 468.5,
      "y": 406
    },
    "AddRecordId": {
      "x": 502,
      "y": 520
    },
    "AddFileIdDecision": {
      "x": 468.5,
      "y": 634
    },
    "AddFileId": {
      "x": 502,
      "y": 748
    },
    "WriteDataFrame": {
      "x": 468.5,
      "y": 862
    }
  },
  "steps": [
    {
      "id": "LoadDataFrame",
      "displayName": "Step Group",
      "description": "Allows pipelines to be executed as a single step within a parent pipeline.",
      "type": "step-group",
      "params": [
        {
          "type": "text",
          "name": "pipelineId",
          "required": false,
          "value": "!loadDataFramePipelineId",
          "description": "The id of the pipeline to execute. Either this parameter or the pipeline parameter must be set."
        },
        {
          "type": "text",
          "name": "pipeline",
          "required": false,
          "description": "The pipeline to execute. Either this parameter or the pipelineId parameter must be set. This may be a mapped value or a pipeline object."
        },
        {
          "type": "boolean",
          "name": "useParentGlobals",
          "required": false,
          "value": true,
          "description": "Indicates whether the calling pipeline globals should be merged with the pipelineMappings."
        },
        {
          "type": "object",
          "name": "pipelineMappings",
          "required": false,
          "value": {},
          "description": "The values to use as the globals for the pipeline. Values may be mapped from the outer pipeline context."
        }
      ],
      "nextStepId": "ExecuteColumnCleanup",
      "stepId": "f09b3b9c-82ac-56de-8dc8-f57c063dd4aa"
    },
    {
      "id": "ExecuteColumnCleanup",
      "displayName": "String Equals",
      "description": "Return whether string1 equals string2",
      "type": "branch",
      "params": [
        {
          "type": "text",
          "name": "string",
          "required": true,
          "value": "!executeColumnCleanup",
          "description": "The string to compare"
        },
        {
          "type": "text",
          "name": "anotherString",
          "required": true,
          "value": "true",
          "description": "The other string to compare"
        },
        {
          "type": "boolean",
          "name": "caseInsensitive",
          "required": false,
          "value": true,
          "description": "Boolean flag to indicate case sensitive compare"
        },
        {
          "type": "result",
          "name": "true",
          "required": false,
          "value": "StandardizeColumnNames",
          "description": ""
        },
        {
          "type": "result",
          "name": "false",
          "required": false,
          "value": "AddRecordIdDecision",
          "description": ""
        }
      ],
      "engineMeta": {
        "spark": "StringSteps.stringEquals",
        "pkg": "com.acxiom.pipeline.steps",
        "results": {
          "primaryType": "Boolean"
        }
      },
      "stepId": "3fabf9ec-5383-4eb3-81af-6092ab7c370d"
    },
    {
      "id": "StandardizeColumnNames",
      "displayName": "Standardize Column Names on a DataFrame",
      "description": "This step will standardize columns names on existing dataframe",
      "type": "Pipeline",
      "params": [
        {
          "type": "text",
          "name": "dataFrame",
          "required": false,
          "value": "@LoadDataFrame",
          "description": ""
        }
      ],
      "engineMeta": {
        "spark": "TransformationSteps.standardizeColumnNames",
        "pkg": "com.acxiom.pipeline.steps"
      },
      "nextStepId": "AddRecordIdDecision",
      "stepId": "a981080d-714c-4d36-8b09-d95842ec5655"
    },
    {
      "id": "AddRecordIdDecision",
      "displayName": "String Equals",
      "description": "Return whether string1 equals string2",
      "type": "branch",
      "params": [
        {
          "type": "text",
          "name": "string",
          "required": true,
          "value": "!addRecordId",
          "description": "The string to compare"
        },
        {
          "type": "text",
          "name": "anotherString",
          "required": true,
          "value": "true",
          "description": "The other string to compare"
        },
        {
          "type": "boolean",
          "name": "caseInsensitive",
          "required": false,
          "value": true,
          "description": "Boolean flag to indicate case sensitive compare"
        },
        {
          "type": "result",
          "name": "true",
          "required": false,
          "value": "AddRecordId",
          "description": ""
        },
        {
          "type": "result",
          "name": "false",
          "required": false,
          "value": "AddFileIdDecision",
          "description": ""
        }
      ],
      "engineMeta": {
        "spark": "StringSteps.stringEquals",
        "pkg": "com.acxiom.pipeline.steps",
        "results": {
          "primaryType": "Boolean"
        }
      },
      "stepId": "3fabf9ec-5383-4eb3-81af-6092ab7c370d"
    },
    {
      "id": "AddRecordId",
      "displayName": "Adds a Unique Identifier to a DataFrame",
      "description": "This step will add a new unique identifier to an existing data frame",
      "type": "Pipeline",
      "params": [
        {
          "type": "text",
          "name": "idColumnName",
          "required": false,
          "value": "metalus_record_id",
          "description": ""
        },
        {
          "type": "text",
          "name": "dataFrame",
          "required": false,
          "value": "@StandardizeColumnNames || @LoadDataFrame",
          "description": ""
        }
      ],
      "engineMeta": {
        "spark": "DataSteps.addUniqueIdToDataFrame",
        "pkg": "com.acxiom.pipeline.steps"
      },
      "nextStepId": "AddFileIdDecision",
      "stepId": "9f7d84b0-ebab-57da-8b39-be4c47028242"
    },
    {
      "id": "AddFileIdDecision",
      "displayName": "String Equals",
      "description": "Return whether string1 equals string2",
      "type": "branch",
      "params": [
        {
          "type": "text",
          "name": "string",
          "required": true,
          "value": "!addFileId",
          "description": "The string to compare"
        },
        {
          "type": "text",
          "name": "anotherString",
          "required": true,
          "value": "true",
          "description": "The other string to compare"
        },
        {
          "type": "boolean",
          "name": "caseInsensitive",
          "required": false,
          "value": true,
          "description": "Boolean flag to indicate case sensitive compare"
        },
        {
          "type": "result",
          "name": "true",
          "required": false,
          "value": "AddFileId",
          "description": ""
        },
        {
          "type": "result",
          "name": "false",
          "required": false,
          "value": "WriteDataFrame",
          "description": ""
        }
      ],
      "engineMeta": {
        "spark": "StringSteps.stringEquals",
        "pkg": "com.acxiom.pipeline.steps",
        "results": {
          "primaryType": "Boolean"
        }
      },
      "stepId": "3fabf9ec-5383-4eb3-81af-6092ab7c370d"
    },
    {
      "id": "AddFileId",
      "displayName": "Add a Column with a Static Value to All Rows in a DataFrame",
      "description": "This step will add a column with a static value to all rows in the provided data frame",
      "type": "Pipeline",
      "params": [
        {
          "type": "text",
          "name": "dataFrame",
          "required": false,
          "value": "@AddRecordId || @StandardizeColumnNames || @LoadDataFrame",
          "description": ""
        },
        {
          "type": "text",
          "name": "columnName",
          "required": false,
          "value": "metalus_file_id",
          "description": ""
        },
        {
          "type": "text",
          "name": "columnValue",
          "required": false,
          "value": "!fileId",
          "description": ""
        }
      ],
      "engineMeta": {
        "spark": "DataSteps.addStaticColumnToDataFrame",
        "pkg": "com.acxiom.pipeline.steps"
      },
      "nextStepId": "WriteDataFrame",
      "stepId": "37e10488-02c1-5c85-b47a-efecf681fdd4"
    },
    {
      "id": "WriteDataFrame",
      "displayName": "Step Group",
      "description": "Allows pipelines to be executed as a single step within a parent pipeline.",
      "type": "step-group",
      "params": [
        {
          "type": "text",
          "name": "pipelineId",
          "required": false,
          "value": "!writeDataFramePipelineId",
          "description": "The id of the pipeline to execute. Either this parameter or the pipeline parameter must be set."
        },
        {
          "type": "text",
          "name": "pipeline",
          "required": false,
          "description": "The pipeline to execute. Either this parameter or the pipelineId parameter must be set. This may be a mapped value or a pipeline object."
        },
        {
          "type": "boolean",
          "name": "useParentGlobals",
          "required": false,
          "value": true,
          "description": "Indicates whether the calling pipeline globals should be merged with the pipelineMappings."
        },
        {
          "type": "object",
          "name": "pipelineMappings",
          "required": false,
          "value": {
            "inputDataFrame": "@AddFileId || @AddRecordId || @StandardizeColumnNames || @LoadDataFrame"
          },
          "description": "The values to use as the globals for the pipeline. Values may be mapped from the outer pipeline context."
        }
      ],
      "stepId": "f09b3b9c-82ac-56de-8dc8-f57c063dd4aa"
    }
  ]
}
