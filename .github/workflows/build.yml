name: Develop Build

on:
  push:
    branches: [ develop ]

jobs:
  build:
    name: Compile and Test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        spark: ['2.4', '3.0']
    runs-on: ${{ matrix.os }}
    steps:
      - name: Print Build Info
        run: echo ${{ matrix.os }} ${{ matrix.spark }}
#      - name: Source Checkout
#        uses: actions/checkout@v2
#      - name: Set up JDK 1.8
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8
#      - name: Build with Maven
#        run: mvn -B -P spark_${{ matrix.spark }} clean install
  code_quality:
    name: Code Quality
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Print Info
        run: echo "coveralls"
#      - name: Source Checkout
#        uses: actions/checkout@v2
#      - name: Set up JDK 1.8
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8
#      - name: Build with Maven
#        run: mvn -B -DskipTests=true clean install
#      - name: Coverage Report
#        run: mvn -B -DrepoToken=${{ secrets.COVERALLS_REPO_TOKEN }} scoverage:report coveralls:report
  sonar:
    if: ${{ github.repository == 'Acxiom/metalus' && github.event_name != 'pull_request' }}
    name: Sonar Report
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Sonar
        run: echo "sonar"
#      - name: Source Checkout
#        uses: actions/checkout@v2
#      - name: Set up JDK 1.8
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8
#      - name: Build with Maven
#        run: mvn -B -DskipTests=true clean install
#      - name: Coverage Report
#        run: mvn -B -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} -Dsonar.login=${{ secrets.SONAR_TOKEN }} -Dsonar.projectKey=Acxiom_spark-pipeline-driver-develop -Dsonar.host.url=https://sonarcloud.io scoverage:report scalastyle:check org.jacoco:jacoco-maven-plugin:prepare-agent sonar:sonar
