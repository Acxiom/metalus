name: Build

on:
  push:
    branches: [ develop, master ]
  pull_request_target:
    branches: [ develop, master ]

jobs:
  build:
    name: Compile and Test
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        spark: [ '2.4', '3.0' ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Source Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Maven Jars
        uses: actions/cache@v2
        env:
          cache-name: cache-maven-jars
          SPARK_LOCAL_IP: 127.0.0.1
        with:
          path: ~/.m2
          key: metalus-build-${{ env.cache-name }}
      - name: Build with Maven
        run: mvn -B -P spark_${{ matrix.spark }} clean install
  code_quality:
    name: Code Quality
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Source Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Maven Jars
        uses: actions/cache@v2
        env:
          cache-name: cache-maven-jars
          SPARK_LOCAL_IP: 127.0.0.1
        with:
          path: ~/.m2
          key: metalus-build-${{ env.cache-name }}
      - name: Build with Maven
        run: mvn -B -DskipTests=true clean install
      - name: Coverage Report
        run: mvn -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 -B -DrepoToken=${{ secrets.COVERALLS_REPO_TOKEN }} scoverage:report coveralls:report
  release:
    if: ${{ github.repository == 'Acxiom/metalus' && github.ref == 'refs/heads/master' && github.event_name != 'pull_request' }}
    name: Release
    needs: [code_quality]
    strategy:
      matrix:
        spark: [ '2.4', '3.0' ]
    runs-on: ubuntu-latest
    steps:
      - name: Source Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Maven Jars
        uses: actions/cache@v2
        env:
          cache-name: cache-maven-jars
        with:
          path: ~/.m2
          key: metalus-build-${{ env.cache-name }}
      - name: Remove SNAPSHOT
        run: mvn -B -P spark_${{ matrix.spark }} versions:set -DremoveSnapshot
      - name: Build with Release
        run: mvn -B -DskipTests=true -P spark_${{ matrix.spark }} clean install
      - name: Setup Singing Key
        run: |
          openssl aes-256-cbc -K ${{ secrets.SIGNING_ASC_KEY }} -iv ${{ secrets.SIGNING_ASC_IV }} -in deployment/acxsigningkey.asc.enc -out deployment/acxsigningkey.asc -d
          gpg --keyring=deployment/pubring.gpg --no-default-keyring --import deployment/acxsigningkey.asc
          gpg --secret-keyring=deployment/secring.gpg --no-default-keyring --import deployment/acxsigningkey.asc
      - name: Deploy Maven Central
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        run: mvn --settings deployment/release-settings.xml -pl metalus-core,metalus-aws,metalus-common,metalus-gcp,metalus-kafka,metalus-mongo,metalus-utils -B -P release,spark_${{ matrix.spark }} -DskipTests=true -Dgpg.executable=gpg -Dgpg.keyname=F40721C83ED4BD317EA73B225B996D862829DE42 -Dgpg.passphrase=${{ secrets.SIGNING_KEY_PASSPHRASE }} -Dgpg.publicKeyring=deployment/pubring.gpg -Dgpg.secretKeyring=deployment/secring.gpg deploy
      - name: Set Scala Version 2.11
        run: echo "SCALA_VERSION=2.11" >> $GITHUB_ENV
        if: matrix.spark == '2.4'
      - name: Set Scala Version 2.12
        run: echo "SCALA_VERSION=2.12" >> $GITHUB_ENV
        if: matrix.spark == '3.0'
      - name: Set Metalus Version
        run: |
          echo 'METALUS_VERSION<<EOF' >> $GITHUB_ENV
          mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Upload Application Jar
        uses: actions/upload-artifact@v2
        with:
          name: metalus-application_${{ env.SCALA_VERSION }}-spark_${{ matrix.spark }}-${{ env.METALUS_VERSION }}.jar
          path: metalus-application/target/metalus-application_${{ env.SCALA_VERSION }}-spark_${{ matrix.spark }}-${{ env.METALUS_VERSION }}.jar
      - name: Upload Application Utils
        uses: actions/upload-artifact@v2
        with:
          name: metalus-utils_${{ env.SCALA_VERSION }}-spark_${{ matrix.spark }}-${{ env.METALUS_VERSION }}.tar.gz
          path: metalus-utils/target/metalus-utils_${{ env.SCALA_VERSION }}-spark_${{ matrix.spark }}-${{ env.METALUS_VERSION }}.tar.gz
  release_github:
    name: Github Release
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Source Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Maven Jars
        uses: actions/cache@v2
        env:
          cache-name: cache-maven-jars
        with:
          path: ~/.m2
          key: metalus-build-${{ env.cache-name }}
      - name: Remove SNAPSHOT
        run: mvn -B versions:set -DremoveSnapshot
      - name: Set Metalus Version
        run: |
          echo 'METALUS_VERSION<<EOF' >> $GITHUB_ENV
          mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Download Application Jar Spark 2.4
        uses: actions/download-artifact@v2
        with:
          name: metalus-application_2.11-spark_2.4-${{ env.METALUS_VERSION }}.jar
      - name: Download Utils Spark 2.4
        uses: actions/download-artifact@v2
        with:
          name: metalus-utils_2.11-spark_2.4-${{ env.METALUS_VERSION }}.tar.gz
      - name: Download Application Jar Spark 3.0
        uses: actions/download-artifact@v2
        with:
          name: metalus-application_2.12-spark_3.0-${{ env.METALUS_VERSION }}.jar
      - name: Download Utils Spark 3.0
        uses: actions/download-artifact@v2
        with:
          name: metalus-utils_2.12-spark_3.0-${{ env.METALUS_VERSION }}.tar.gz
      - name: Create Github Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ env.METALUS_VERSION }}"
          prerelease: true
          title: "Metalus Pipeline Library ${{ env.METALUS_VERSION }}"
          files: |
            *.tar.gz
            *.jar
