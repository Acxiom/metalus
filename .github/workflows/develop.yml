name: Develop Build

on:
  push:
    branches: [ develop ]

jobs:
  build:
    name: Compile and Test
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        spark: ['3.0_2.12', '3.1_2.12', '3.2_2.12', '3.3_2.12' ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Source Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - id: get-versions
        run: |
          spark=$(echo ${{matrix.spark}} | cut -d_ -f1)
          scala=$(echo ${{matrix.spark}} | cut -d_ -f2)
          echo "::set-output name=spark::$spark"
          echo "::set-output name=scala::$scala"
      - name: Build with Maven
        env:
          SPARK_LOCAL_IP: 127.0.0.1
          JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8
        run: mvn -B -P spark_${{ steps.get-versions.outputs.spark }},scala_${{ steps.get-versions.outputs.scala }} clean install
  code_quality:
    name: Code Quality
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Source Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build with Maven
        run: mvn -P spark_3.1 -B -DskipTests=true clean install
      - name: Coverage Report
        env:
          SPARK_LOCAL_IP: 127.0.0.1
          JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8
        run: mvn -P spark_3.1 -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 -B -DrepoToken=${{ secrets.COVERALLS_REPO_TOKEN }} scoverage:report coveralls:report
